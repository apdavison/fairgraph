"""
{{docstring}}
"""

# this file was auto-generated

from openminds.properties import Property
from openminds.latest.{{ module_name }} import {{ class_name }}
from fairgraph import {{ base_class }}

{{preamble}}


class {{ class_name }}({{base_class}}, {{ class_name }}):
    """
    {{ docstring }}
    """
    type_ = "{{ openminds_type }}"
    {%- if default_space %}
    default_space = "{{ default_space }}"
    {%- endif %}
    # forward properties are defined in the parent class (in openMINDS-Python)
    reverse_properties = [
        {% for prop in reverse_properties -%}
        Property(
            "{{prop.name}}", {{prop.type_str}},
            {%- if prop.iri is iterable and (prop.iri is not string and prop.iri is not mapping) %}
                ["{{prop.iri|join('", "')}}"],
            {% else %}
                "{{prop.iri}}",
            {% endif -%}
            {%- if prop._forward_name_python is iterable and (prop._forward_name_python is not string and prop._forward_name_python is not mapping) %}
            reverse=["{{prop._forward_name_python|join('", "')}}"],
            {% else %}
            reverse="{{prop._forward_name_python}}",
            {% endif -%}
            {%- if prop.allow_multiple %}multiple={{prop.allow_multiple}},{% endif -%}
            {%- if prop.required %}, required={{prop.required}},{% endif -%}
            description="{{prop.doc}}"),
        {% endfor %}
    ]
    {%- if aliases %}
    aliases = {{ aliases }}
    {%- endif %}
    {%- if default_space %}
    existence_query_properties = {{ existence_query_properties }}
    {%- endif %}

    def __init__(self {%- for arg in constructor_arguments -%}, {{arg}}=None{%- endfor -%}, id=None, data=None, space=None, scope=None):
        return {{ base_class }}.__init__(self, {{ standard_init_properties }}data=data {%- for arg in constructor_arguments -%}, {{arg}}={{arg}}{%- endfor -%})
{{ additional_methods }}
