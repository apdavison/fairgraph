from fairgraph.openminds.core import SoftwareVersion
from fairgraph.openminds.computation import Environment, HardwareSystem

from test.utils import mock_client


class TestEnvironment:
    def test_generate_query(self, mock_client):
        generated = Environment.generate_query(
            space="myspace",
            client=mock_client,
            filters={
                "name": "foo",
                "hardware": HardwareSystem(id="some_id"),
                "description": "bar",
                "software": SoftwareVersion(id="another_id"),
            },
        )
        expected = {
            "@context": {
                "@vocab": "https://core.kg.ebrains.eu/vocab/query/",
                "query": "https://schema.hbp.eu/myQuery/",
                "propertyName": {"@id": "propertyName", "@type": "@id"},
                "merge": {"@type": "@id", "@id": "merge"},
                "path": {"@id": "path", "@type": "@id"},
            },
            "meta": {
                "type": "https://openminds.om-i.org/types/Environment",
                "description": "Automatically generated by fairgraph",
            },
            "structure": [
                {"path": "@id", "filter": {"op": "EQUALS", "parameter": "id"}},
                {
                    "path": "https://core.kg.ebrains.eu/vocab/meta/space",
                    "propertyName": "query:space",
                    "filter": {"op": "EQUALS", "value": "myspace_1234"},
                },
                {"path": "@type"},
                {
                    "path": "https://openminds.om-i.org/props/configuration",
                    "propertyName": "configuration",
                    "singleValue": "FIRST",
                    "structure": [{"path": "@id"}, {"path": "@type"}],
                },
                {"path": "https://openminds.om-i.org/props/description", "propertyName": "description"},
                {
                    "path": "https://openminds.om-i.org/props/hardware",
                    "propertyName": "hardware",
                    "singleValue": "FIRST",
                    "structure": [{"path": "@id"}, {"path": "@type"}],
                },
                {"path": "https://openminds.om-i.org/props/name", "propertyName": "name", "sort": True},
                {
                    "path": "https://openminds.om-i.org/props/software",
                    "propertyName": "software",
                    "ensureOrder": True,
                    "structure": [{"path": "@id"}, {"path": "@type"}],
                },
                {
                    "path": {"@id": "https://openminds.om-i.org/props/environment", "reverse": True},
                    "propertyName": "environment",
                    "ensureOrder": True,
                    "structure": [{"path": "@id"}, {"path": "@type"}],
                },
                {
                    "path": "https://openminds.om-i.org/props/description",
                    "propertyName": "Qdescription",
                    "filter": {"op": "CONTAINS", "value": "bar"},
                    "required": True,
                },
                {
                    "path": "https://openminds.om-i.org/props/hardware",
                    "propertyName": "Qhardware",
                    "required": True,
                    "structure": [{"path": "@id", "filter": {"op": "CONTAINS", "value": "some_id"}}],
                },
                {
                    "path": "https://openminds.om-i.org/props/name",
                    "propertyName": "Qname",
                    "filter": {"op": "CONTAINS", "value": "foo"},
                    "required": True,
                },
                {
                    "path": "https://openminds.om-i.org/props/software",
                    "propertyName": "Qsoftware",
                    "required": True,
                    "structure": [{"path": "@id", "filter": {"op": "CONTAINS", "value": "another_id"}}],
                },
            ],
        }
        assert generated == expected
